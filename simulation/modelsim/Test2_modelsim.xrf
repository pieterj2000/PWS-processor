vendor_name = ModelSim
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/ALU.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/ALUcontroller.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/FDE_processor.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/program_rom.qip
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/program_rom.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/Instructie_decoder.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/Register_controller.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/Test2.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/program_ram.qip
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/program_ram.v
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/db/Test2.cbx.xml
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/aglobal130.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/altrom.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/altram.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, d:/altera quartus ii/software/quartus/libraries/megafunctions/cbx.lst
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/db/altsyncram_b9a1.tdf
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/db/altsyncram_cn71.tdf
source_file = 1, D:/Onderneming/16-bits processor/PWS-processor/rom_inhoud2.hex
design_name = FDE_processor
instance = comp, \counter[1] , counter[1], FDE_processor, 1
instance = comp, \counter[2] , counter[2], FDE_processor, 1
instance = comp, \counter[3] , counter[3], FDE_processor, 1
instance = comp, \counter[6] , counter[6], FDE_processor, 1
instance = comp, \counter[4] , counter[4], FDE_processor, 1
instance = comp, \counter[5] , counter[5], FDE_processor, 1
instance = comp, \counter[7] , counter[7], FDE_processor, 1
instance = comp, \counter[11] , counter[11], FDE_processor, 1
instance = comp, \counter[8] , counter[8], FDE_processor, 1
instance = comp, \counter[9] , counter[9], FDE_processor, 1
instance = comp, \counter[10] , counter[10], FDE_processor, 1
instance = comp, \counter[12] , counter[12], FDE_processor, 1
instance = comp, \counter[13] , counter[13], FDE_processor, 1
instance = comp, \counter[14] , counter[14], FDE_processor, 1
instance = comp, \counter[15] , counter[15], FDE_processor, 1
instance = comp, \counter[16] , counter[16], FDE_processor, 1
instance = comp, \counter[18] , counter[18], FDE_processor, 1
instance = comp, \counter[19] , counter[19], FDE_processor, 1
instance = comp, \counter[17] , counter[17], FDE_processor, 1
instance = comp, \counter[20] , counter[20], FDE_processor, 1
instance = comp, \counter[21] , counter[21], FDE_processor, 1
instance = comp, \counter[22] , counter[22], FDE_processor, 1
instance = comp, \counter[23] , counter[23], FDE_processor, 1
instance = comp, \counter[24] , counter[24], FDE_processor, 1
instance = comp, \counter[25] , counter[25], FDE_processor, 1
instance = comp, \counter[26] , counter[26], FDE_processor, 1
instance = comp, \counter[27] , counter[27], FDE_processor, 1
instance = comp, \counter[28] , counter[28], FDE_processor, 1
instance = comp, \counter[29] , counter[29], FDE_processor, 1
instance = comp, \counter[30] , counter[30], FDE_processor, 1
instance = comp, \counter[1]~30 , counter[1]~30, FDE_processor, 1
instance = comp, \counter[2]~32 , counter[2]~32, FDE_processor, 1
instance = comp, \counter[3]~34 , counter[3]~34, FDE_processor, 1
instance = comp, \counter[4]~36 , counter[4]~36, FDE_processor, 1
instance = comp, \counter[5]~38 , counter[5]~38, FDE_processor, 1
instance = comp, \counter[6]~40 , counter[6]~40, FDE_processor, 1
instance = comp, \counter[7]~42 , counter[7]~42, FDE_processor, 1
instance = comp, \counter[8]~44 , counter[8]~44, FDE_processor, 1
instance = comp, \counter[9]~46 , counter[9]~46, FDE_processor, 1
instance = comp, \counter[10]~48 , counter[10]~48, FDE_processor, 1
instance = comp, \counter[11]~50 , counter[11]~50, FDE_processor, 1
instance = comp, \counter[12]~52 , counter[12]~52, FDE_processor, 1
instance = comp, \counter[13]~54 , counter[13]~54, FDE_processor, 1
instance = comp, \counter[14]~56 , counter[14]~56, FDE_processor, 1
instance = comp, \counter[15]~58 , counter[15]~58, FDE_processor, 1
instance = comp, \counter[16]~60 , counter[16]~60, FDE_processor, 1
instance = comp, \counter[17]~62 , counter[17]~62, FDE_processor, 1
instance = comp, \counter[18]~64 , counter[18]~64, FDE_processor, 1
instance = comp, \counter[19]~66 , counter[19]~66, FDE_processor, 1
instance = comp, \counter[20]~68 , counter[20]~68, FDE_processor, 1
instance = comp, \counter[21]~70 , counter[21]~70, FDE_processor, 1
instance = comp, \counter[22]~72 , counter[22]~72, FDE_processor, 1
instance = comp, \counter[23]~74 , counter[23]~74, FDE_processor, 1
instance = comp, \counter[24]~76 , counter[24]~76, FDE_processor, 1
instance = comp, \counter[25]~78 , counter[25]~78, FDE_processor, 1
instance = comp, \counter[26]~80 , counter[26]~80, FDE_processor, 1
instance = comp, \counter[27]~82 , counter[27]~82, FDE_processor, 1
instance = comp, \counter[28]~84 , counter[28]~84, FDE_processor, 1
instance = comp, \counter[29]~86 , counter[29]~86, FDE_processor, 1
instance = comp, \counter[30]~88 , counter[30]~88, FDE_processor, 1
instance = comp, \counter[0] , counter[0], FDE_processor, 1
instance = comp, \Equal0~0 , Equal0~0, FDE_processor, 1
instance = comp, \Equal0~1 , Equal0~1, FDE_processor, 1
instance = comp, \Equal0~2 , Equal0~2, FDE_processor, 1
instance = comp, \Equal0~3 , Equal0~3, FDE_processor, 1
instance = comp, \Equal0~4 , Equal0~4, FDE_processor, 1
instance = comp, \Equal0~5 , Equal0~5, FDE_processor, 1
instance = comp, \Equal0~6 , Equal0~6, FDE_processor, 1
instance = comp, \Equal0~7 , Equal0~7, FDE_processor, 1
instance = comp, \Equal0~8 , Equal0~8, FDE_processor, 1
instance = comp, \Equal0~9 , Equal0~9, FDE_processor, 1
instance = comp, \counter[0]~90 , counter[0]~90, FDE_processor, 1
instance = comp, \counter[1]~feeder , counter[1]~feeder, FDE_processor, 1
instance = comp, \clock~I , clock, FDE_processor, 1
instance = comp, \clock~clkctrl , clock~clkctrl, FDE_processor, 1
instance = comp, \led_pin~0 , led_pin~0, FDE_processor, 1
instance = comp, \led_pin~reg0 , led_pin~reg0, FDE_processor, 1
instance = comp, \led_pin~I , led_pin, FDE_processor, 1
instance = comp, \led_register[0]~I , led_register[0], FDE_processor, 1
instance = comp, \led_register[1]~I , led_register[1], FDE_processor, 1
instance = comp, \led_register[2]~I , led_register[2], FDE_processor, 1
instance = comp, \led_register[3]~I , led_register[3], FDE_processor, 1
instance = comp, \led_register[4]~I , led_register[4], FDE_processor, 1
instance = comp, \led_register[5]~I , led_register[5], FDE_processor, 1
instance = comp, \led_register[6]~I , led_register[6], FDE_processor, 1
instance = comp, \led_register[7]~I , led_register[7], FDE_processor, 1
instance = comp, \schakelaar_register[0]~I , schakelaar_register[0], FDE_processor, 1
instance = comp, \schakelaar_register[1]~I , schakelaar_register[1], FDE_processor, 1
instance = comp, \schakelaar_register[2]~I , schakelaar_register[2], FDE_processor, 1
instance = comp, \schakelaar_register[3]~I , schakelaar_register[3], FDE_processor, 1
instance = comp, \schakelaar_register[4]~I , schakelaar_register[4], FDE_processor, 1
instance = comp, \schakelaar_register[5]~I , schakelaar_register[5], FDE_processor, 1
instance = comp, \schakelaar_register[6]~I , schakelaar_register[6], FDE_processor, 1
instance = comp, \schakelaar_register[7]~I , schakelaar_register[7], FDE_processor, 1
instance = comp, \knoppen_register[0]~I , knoppen_register[0], FDE_processor, 1
instance = comp, \knoppen_register[1]~I , knoppen_register[1], FDE_processor, 1
instance = comp, \knoppen_register[2]~I , knoppen_register[2], FDE_processor, 1
instance = comp, \knoppen_register[3]~I , knoppen_register[3], FDE_processor, 1
